import pandas as pd
from datetime import datetime
import math

# Lista de registros activos y finalizados
registros_activos = []
registros_finalizados = []

# Configuraci√≥n de zonas
zonas_disponibles = ["A", "B", "C", "D", "E"]
tarifas = {
    "carro": 3000,
    "moto": 1500
}

# Verificar si una zona est√° ocupada
def zona_ocupada(zona):
    for r in registros_activos:
        if r["Zona"] == zona:
            return True
    return False

# Registrar entrada 
def registrar_conductor():
    print("\n--- Registro de Ingreso ---")

    nombre = input("Nombre completo del conductor: ")
    cedula = input("C√©dula: ")
    telefono = input("Tel√©fono: ")
    placa = input("Placa del veh√≠culo: ")

    # Validar tipo de veh√≠culo
    while True:
        tipo = input("Tipo de veh√≠culo (carro/moto): ").lower()
        if tipo in tarifas:
            break
        print("‚ùå Tipo de veh√≠culo no v√°lido. Intente de nuevo.")

    # Validar zona disponible y no ocupada
    print(f"Zonas disponibles: {', '.join(zonas_disponibles)}")
    while True:
        zona = input("Selecciona una zona: ").upper()
        if zona not in zonas_disponibles:
            print("‚ùå Zona inv√°lida. Intente de nuevo.")
        elif zona_ocupada(zona):
            print("‚ö†Ô∏è Zona ya ocupada. Elige otra.")
        else:
            break

    hora_entrada = datetime.now()

    registro = {
        "Nombre": nombre,
        "C√©dula": cedula,
        "Tel√©fono": telefono,
        "Placa": placa,
        "TipoVeh√≠culo": tipo,
        "Zona": zona,
        "HoraEntrada": hora_entrada
    }

    registros_activos.append(registro)
    print("‚úÖ Registro exitoso.")

# Mostrar veh√≠culos actualmente parqueados
def mostrar_activos():
    if not registros_activos:
        print("üì≠ No hay veh√≠culos actualmente en el parqueadero.")
        return
    print("\nüöó Veh√≠culos en el parqueadero:")
    for i, r in enumerate(registros_activos, start=1):
        print(f"{i}. {r['Placa']} - Zona {r['Zona']} - Ingres√≥ a las {r['HoraEntrada'].strftime('%Y-%m-%d %H:%M:%S')}")

# Registrar salida con validaci√≥n de placa
def registrar_salida():
    if not registros_activos:
        print("üì≠ No hay veh√≠culos registrados.")
        return

    while True:
        placa = input("Ingresa la placa del veh√≠culo que va a salir (o escribe 'cancelar' para volver): ").upper()
        if placa == 'CANCELAR':
            print("üîô Operaci√≥n cancelada.")
            return

        encontrado = None
        for r in registros_activos:
            if r["Placa"].upper() == placa:
                encontrado = r
                break

        if encontrado:
            break
        print("‚ùå Veh√≠culo no encontrado. Intente de nuevo.")

    hora_salida = datetime.now()
    hora_entrada = encontrado["HoraEntrada"]
    tiempo_total = hora_salida - hora_entrada
    horas = math.ceil(tiempo_total.total_seconds() / 3600)

    tarifa = tarifas[encontrado["TipoVeh√≠culo"]]
    valor_pagar = horas * tarifa

    registro_final = encontrado.copy()
    registro_final["HoraSalida"] = hora_salida
    registro_final["Horas"] = horas
    registro_final["ValorPagado"] = valor_pagar

    registros_finalizados.append(registro_final)
    registros_activos.remove(encontrado)

    print("\nüö™ Veh√≠culo retirado exitosamente:")
    print(f"‚è∞ Tiempo total: {horas} hora(s)")
    print(f"üí∞ Valor a pagar: ${valor_pagar:,}")

# Guardar todo en CSV
def guardar_csv():
    if registros_finalizados:
        df = pd.DataFrame(registros_finalizados)
        df["HoraEntrada"] = df["HoraEntrada"].astype(str)
        df["HoraSalida"] = df["HoraSalida"].astype(str)
        df.to_csv("registros_completos_parqueadero.csv", index=False)
        print("üíæ Datos guardados en 'registros_completos_parqueadero.csv'.")
    else:
        print("‚ö†Ô∏è No hay registros finalizados para guardar.")

# Ver todo el historial
def mostrar_historial():
    if registros_finalizados:
        df = pd.DataFrame(registros_finalizados)
        print("\nüìö Historial de parqueo completado:")
        print(df[["Placa", "Zona", "HoraEntrada", "HoraSalida", "Horas", "ValorPagado"]])
    else:
        print("üì≠ No hay historial a√∫n.")

# Men√∫ principal con validaci√≥n
while True:
    print("\n--- Men√∫ Principal Parqueadero ---")
    print("1. Registrar ingreso")
    print("2. Registrar salida")
    print("3. Ver veh√≠culos en parqueadero")
    print("4. Ver historial")
    print("5. Guardar en CSV")
    print("6. Salir")

    opcion = input("Selecciona una opci√≥n (1-6): ").strip()

    if opcion == "1":
        registrar_conductor()
    elif opcion == "2":
        registrar_salida()
    elif opcion == "3":
        mostrar_activos()
    elif opcion == "4":
        mostrar_historial()
    elif opcion == "5":
        guardar_csv()
    elif opcion == "6":
        print("üëã Cerrando el sistema. ¬°Gracias por usar el parqueadero!")
        break
    else:
        print("‚ùå Opci√≥n inv√°lida. Intente de nuevo.")
